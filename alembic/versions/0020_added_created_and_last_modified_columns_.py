"""
Added created and last modified columns on documents.

Revision ID: 0020
Revises: 0019
Create Date: 2023-11-16 17:01:21.091516

"""
import sqlalchemy as sa
from alembic_utils.pg_function import PGFunction
from alembic_utils.pg_trigger import PGTrigger

from alembic import op

# revision identifiers, used by Alembic.
revision = "0020"
down_revision = "0019"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "family_document",
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.add_column(
        "family_document",
        sa.Column(
            "last_modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    public_update_last_modified = PGFunction(
        schema="public",
        signature="update_last_modified()",
        definition="""
    RETURNS TRIGGER AS $$
    BEGIN
        NEW.last_modified = NOW();
        RETURN NEW;
    END;
    $$ language 'plpgsql'
""",
    )
    op.create_entity(public_update_last_modified)  # type: ignore

    public_family_document_update_last_modified = PGTrigger(
        schema="public",
        signature="update_last_modified",
        on_entity="public.family_document",
        definition="""
    BEFORE INSERT OR UPDATE ON public.family_document
    FOR EACH ROW
    EXECUTE PROCEDURE public.update_last_modified()
""",
    )
    op.create_entity(public_family_document_update_last_modified)  # type: ignore
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    public_family_document_update_last_modified = PGTrigger(
        schema="public",
        signature="update_last_modified",
        on_entity="public.family_document",
        is_constraint=False,
        definition="""
    BEFORE INSERT OR UPDATE ON public.family_document
    FOR EACH ROW
    EXECUTE PROCEDURE public.update_last_modified()
""",
    )
    op.drop_entity(public_family_document_update_last_modified)  # type: ignore

    public_update_last_modified = PGFunction(
        schema="public",
        signature="update_last_modified()",
        definition="""
    RETURNS TRIGGER AS $$
    BEGIN
        NEW.last_modified = NOW();
        RETURN NEW;
    END;
    $$ language 'plpgsql'
""",
    )
    op.drop_entity(public_update_last_modified)  # type: ignore

    op.drop_column("family_document", "last_modified")
    op.drop_column("family_document", "created")
    # ### end Alembic commands ###
