/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { FamilyEventPublic } from "./FamilyEventPublic";
import {
  FamilyEventPublicFromJSON,
  FamilyEventPublicFromJSONTyped,
  FamilyEventPublicToJSON,
  FamilyEventPublicToJSONTyped,
} from "./FamilyEventPublic";

/**
 *
 * @export
 * @interface FamilyDocumentPublic
 */
export interface FamilyDocumentPublic {
  /**
   *
   * @type {string}
   * @memberof FamilyDocumentPublic
   */
  importId: string;
  /**
   *
   * @type {string}
   * @memberof FamilyDocumentPublic
   */
  slug: string;
  /**
   *
   * @type {string}
   * @memberof FamilyDocumentPublic
   */
  title: string;
  /**
   *
   * @type {string}
   * @memberof FamilyDocumentPublic
   */
  cdnObject: string;
  /**
   *
   * @type {string}
   * @memberof FamilyDocumentPublic
   */
  variant: string | null;
  /**
   *
   * @type {string}
   * @memberof FamilyDocumentPublic
   */
  md5Sum: string | null;
  /**
   *
   * @type {string}
   * @memberof FamilyDocumentPublic
   */
  sourceUrl: string | null;
  /**
   *
   * @type {string}
   * @memberof FamilyDocumentPublic
   */
  contentType: string | null;
  /**
   *
   * @type {string}
   * @memberof FamilyDocumentPublic
   */
  language: string | null;
  /**
   *
   * @type {Array<string>}
   * @memberof FamilyDocumentPublic
   */
  languages: Array<string>;
  /**
   *
   * @type {string}
   * @memberof FamilyDocumentPublic
   */
  documentType: string | null;
  /**
   *
   * @type {string}
   * @memberof FamilyDocumentPublic
   */
  documentRole: string | null;
  /**
   *
   * @type {Array<FamilyEventPublic>}
   * @memberof FamilyDocumentPublic
   */
  events: Array<FamilyEventPublic>;
}

/**
 * Check if a given object implements the FamilyDocumentPublic interface.
 */
export function instanceOfFamilyDocumentPublic(
  value: object,
): value is FamilyDocumentPublic {
  if (!("importId" in value) || value["importId"] === undefined) return false;
  if (!("slug" in value) || value["slug"] === undefined) return false;
  if (!("title" in value) || value["title"] === undefined) return false;
  if (!("cdnObject" in value) || value["cdnObject"] === undefined) return false;
  if (!("variant" in value) || value["variant"] === undefined) return false;
  if (!("md5Sum" in value) || value["md5Sum"] === undefined) return false;
  if (!("sourceUrl" in value) || value["sourceUrl"] === undefined) return false;
  if (!("contentType" in value) || value["contentType"] === undefined)
    return false;
  if (!("language" in value) || value["language"] === undefined) return false;
  if (!("languages" in value) || value["languages"] === undefined) return false;
  if (!("documentType" in value) || value["documentType"] === undefined)
    return false;
  if (!("documentRole" in value) || value["documentRole"] === undefined)
    return false;
  if (!("events" in value) || value["events"] === undefined) return false;
  return true;
}

export function FamilyDocumentPublicFromJSON(json: any): FamilyDocumentPublic {
  return FamilyDocumentPublicFromJSONTyped(json, false);
}

export function FamilyDocumentPublicFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): FamilyDocumentPublic {
  if (json == null) {
    return json;
  }
  return {
    importId: json["import_id"],
    slug: json["slug"],
    title: json["title"],
    cdnObject: json["cdn_object"],
    variant: json["variant"],
    md5Sum: json["md5_sum"],
    sourceUrl: json["source_url"],
    contentType: json["content_type"],
    language: json["language"],
    languages: json["languages"],
    documentType: json["document_type"],
    documentRole: json["document_role"],
    events: (json["events"] as Array<any>).map(FamilyEventPublicFromJSON),
  };
}

export function FamilyDocumentPublicToJSON(json: any): FamilyDocumentPublic {
  return FamilyDocumentPublicToJSONTyped(json, false);
}

export function FamilyDocumentPublicToJSONTyped(
  value?: FamilyDocumentPublic | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    import_id: value["importId"],
    slug: value["slug"],
    title: value["title"],
    cdn_object: value["cdnObject"],
    variant: value["variant"],
    md5_sum: value["md5Sum"],
    source_url: value["sourceUrl"],
    content_type: value["contentType"],
    language: value["language"],
    languages: value["languages"],
    document_type: value["documentType"],
    document_role: value["documentRole"],
    events: (value["events"] as Array<any>).map(FamilyEventPublicToJSON),
  };
}
