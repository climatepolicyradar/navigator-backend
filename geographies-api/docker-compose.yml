services:
  app:
    profiles: [dev]
    container_name: geographies-api-app
    build:
      context: ..
      dockerfile: geographies-api/Dockerfile.dev
    ports:
      - 8080:8080 # @related: PORT_NUMBER
    environment:
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_ENDPOINT_URL: http://localstack:4566
      AWS_DEFAULT_REGION: eu-west-1
      GEOGRAPHIES_BUCKET: test-bucket
      CDN_URL: http://localstack:4566/test-bucket
    volumes:
      - ..:/app
    working_dir: /app
    command: |
      sh -c '
        uv run --project geographies-api fastapi dev geographies-api/app/main.py --port 8080 --host 0.0.0.0 &
        until curl -s http://localhost:8080/geographies/docs > /dev/null; do sleep 2; done;
        until aws --endpoint-url=http://localstack:4566 s3 ls s3://test-bucket; do
          echo "Waiting for geographies bucket to exist..."
          sleep 2
        done
        curl -X GET http://localhost:8080/geographies/populate-s3-bucket
        wait
      '
    depends_on:
      localstack:
        condition: service_started

  localstack:
    profiles: [dev, test]
    image: localstack/localstack:latest
    ports:
      - 4566:4566
    environment:
      GEOGRAPHIES_BUCKET: test-bucket
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_ENDPOINT_URL: http://localstack:4566
      AWS_DEFAULT_REGION: eu-west-1
      DEBUG: 1
    volumes:
      - ./init-s3.sh:/etc/localstack/init/ready.d/init-s3.sh

  test:
    profiles: [test]
    container_name: geographies-api-test
    build:
      context: ..
      dockerfile: geographies-api/Dockerfile.dev
    volumes:
      - ..:/app
    working_dir: /app
    environment:
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_ENDPOINT_URL: http://localstack:4566
      AWS_DEFAULT_REGION: eu-west-1
      GEOGRAPHIES_BUCKET: test-bucket
      CDN_URL: http://localstack:4566/test-bucket
    command: |
      sh -c '
        uv run --project geographies-api fastapi dev geographies-api/app/main.py --port 8080 --host 0.0.0.0 &
        until curl -s http://localhost:8080/geographies/docs > /dev/null; do sleep 2; done;
        until aws --endpoint-url=http://localstack:4566 s3 ls s3://test-bucket; do
          echo "Waiting for geographies bucket to exist..."
          sleep 2
        done
        curl -X GET http://localhost:8080/geographies/populate-s3-bucket
        uv run --project geographies-api pytest geographies-api/ -vvv --color=yes
      '
    depends_on:
      localstack:
        condition: service_started

volumes:
  navigator_postgres_data: {}
