name: Deploy to production
on:
  workflow_dispatch: {}
permissions:
  id-token: write
  contents: read
jobs:
  test-microservices:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [families-api, geographies-api, concepts-api, data-in-pipeline]
    steps:
      - uses: actions/checkout@v5
      - uses: extractions/setup-just@v3
      - run: just test ${{ matrix.service }}
  deploy-microservices:
    needs: test-microservices
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [production]
    environment: ${{ matrix.environment }}
    env:
      SERVICES: families-api geographies-api concepts-api data-in-pipeline
    steps:
      - uses: actions/checkout@v5
      - uses: extractions/setup-just@v3
      - uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/navigator-backend-github-actions-deploy
          role-session-name: GitHub_to_AWS_via_FederatedOIDC_${{ matrix.environment }}
          aws-region: eu-west-1
      - uses: aws-actions/amazon-ecr-login@v2
      # we use python / uv in some build scripts and testing
      - uses: actions/setup-python@v6
        with:
          python-version: "3.12"
      - uses: astral-sh/setup-uv@v6
      - run: uv sync --all-packages
      - run: |
          for service in $SERVICES; do
            just deploy $service ${{ matrix.environment }} latest
            just deploy $service ${{ matrix.environment }} ${{ github.sha }}
          done
