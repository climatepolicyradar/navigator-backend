name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# https://github.com/marketplace/actions/docker-layer-caching
jobs:
  test-bash:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run:  make test_bashscripts

  build-start-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use .env.example
        run:  cp .env.example .env

      - name: Get python Container
        run:  docker pull python:3.9

      - name: Install latest Vespa CLI
        env:
          VESPA_CLI_VERSION: "8.250.43"
        run: |
          mkdir scripts/vespa-cli
          curl -fsSL https://github.com/vespa-engine/vespa/releases/download/v${VESPA_CLI_VERSION}/vespa-cli_${VESPA_CLI_VERSION}_linux_amd64.tar.gz | \
            tar -zxf - -C scripts/vespa-cli --strip-component=1
          echo "scripts/vespa-cli/bin" >> $GITHUB_PATH

      - name: Build
        run: |
          docker-compose build
          docker images

      - name: Build docker-compose stack
        run:  make start

      - name: Wait for backend to open port
        run:  ./scripts/wait_for_port.sh localhost 8888 10

      - name: Run backend tests
        run:  make test

      - name: docker
        run: |
          docker-compose logs
          docker-compose ps
          docker ps -a
          ls -la

      - name: Setup vespa for search
        run: make vespa_setup

      - name: Run backend search tests for vespa
        run:  make test_search

      - name: Log Dump
        if:   always()
        run:  docker-compose logs

      - name: Run Integration Tests
        run: echo TODO-TODO-TODO-TODO-TODO-TODO-TODO-TODO-TODO-TODO-TODO-TODO

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.6.1

      - name: Push Images to ECR
        run: |
          .github/retag-and-push.sh navigator-backend latest
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
